@using CardGames.Shared.Models
@using CardGames.Shared;
@inject IStringLocalizer<UIStrings> L;

<div class="modal @modalClass" role="dialog" style="display: @modalDisplay; overflow: auto">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@L["LastPlayedCards"]</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="() => Close()">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" style="text-align:center">
                <table border="0">
                    <tr>
                        @foreach (var player in game.Players)
                        {
                            <td>
                                @(player.FirstName)
                            </td>
                        }
                    </tr>
                    <tr>
                        @foreach (var face in ShowLastPlayedCard())
                        {
                            <td>
                                <img src="/CardImages/@(face.ToString() + ".png")" width="100" />
                            </td>
                        }
                    </tr>
                </table>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public Game game { get; set; }
    [Parameter]
    public string modalClass { get; set; }
    [Parameter]
    public string modalDisplay { get; set; }

    [Parameter]
    public EventCallback<int> OnCloseCallback { get; set; }

    private void Close()
    {
        OnCloseCallback.InvokeAsync(0);
    }

    private string[] ShowLastPlayedCard()
    {
        if (game.Rounds[game.CurrentRound].PlayHistory.Count() > 0)
        {
            var lastPlayedCards = game.Rounds[game.CurrentRound].PlayHistory.Last();
            var faces = lastPlayedCards.Select(f => f.Card.Face).ToArray();
            return faces;
        }
        else
        {
            return new string[0];
        }
    }
}
