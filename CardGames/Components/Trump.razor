@using CardGames.Shared.Models
@using CardGames.Shared;
@inject IStringLocalizer<UIStrings> L;

<div class="modal @_modalClass" role="dialog" style="display: @_modalDisplay; overflow: auto">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@L["Colour"]</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="() => Close()">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" style="text-align:center">
                <img class="playingColor" src="/CardImages/@(_game.PlayingCard.Face.ToString() + ".png")" width="200" />
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public Game _game { get; set; }
    [Parameter]
    public string _selectedPlayer { get; set; }
    [Parameter]
    public string _modalClass { get; set; }
    [Parameter]
    public string _modalDisplay { get; set; }

    [Parameter]
    public EventCallback<int> OnCloseCallback { get; set; }

    private void Close()
    {
        OnCloseCallback.InvokeAsync(0);
    }

    private bool IsGameController()
    {
        return _game.IsGameController(GameUtils.GetPlayerId(_selectedPlayer));
    }

    private bool IsGameController(string player)
    {
        return _game.IsGameController(GameUtils.GetPlayerId(player));
    }
}
